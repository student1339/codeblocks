/*
梅森尼数
形如2^i-1的素数，称为梅森尼数。
编程计算并输出指数i在[2,n]中的所有梅森尼数，并统计这些梅森尼数的个数，其中n的值由键盘输入，
并且n的值不能大于50。其中，2^i表示2的i次方，
请尽量不要使用pow(2,i)编程计算（若要用，请一直使用double计算），应采用循环累乘求积的方式计算2^i。
请用下面的函数原型，编写程序。
int IsPrime(double x);
提示：当i超过30以后，2^i-1的值会很大，不能用long型变量来存储，必须使用double类型来存储。
对于double类型变量x（不是整型）不能执行求余运算，即不能用x%i == 0来判断x是否能被i整除，
可以使用x/i == (long long)(x/i)来判断x是否能被i整除。
*/


#include<stdio.h>
#include<math.h>

int IsPrime(double x);

int main()
{
    double  t, m;
    int     count = 0, i, n;
    printf("Input n:\n");
    scanf("%d", &n);
    t = 2;
    for (i = 2; i <= n; i++)
    {
        t = t * 2;
        m  = t - 1;
        if (IsPrime(m))
        {
            count++;
            printf("2^%d-1=%.0f\n", i, m);
        }
    }
    printf("count=%d\n", count);
    return 0;
}
// 函数功能：判断x是否是素数，若函数返回0，则表示不是素数，若返回1，则代表是素数
int IsPrime(double x)
{
    int i, flag = 1;
    int squareRoot = (int)sqrt(x);
    if (x <= 1)
        flag = 0;     // 负数、0和1都不是素数
    for (i = 2; i <= squareRoot && flag; i++)
    {
        if (x / i == (long long)(x / i))
            flag = 0; // 若能被整除，则不是素数
    }
    return flag;
}
